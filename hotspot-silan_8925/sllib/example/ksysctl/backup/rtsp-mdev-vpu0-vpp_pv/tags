!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AUDIO_SUPPORT	main.c	52;"	d	file:
CFG_INFO	cfginfo.c	23;"	d	file:
CFG_INFO_S	cfginfo.h	/^}CFG_INFO_S;$/;"	t	typeref:struct:cfginfo
CH_FNT_HEIGHT	font.c	20;"	d	file:
CH_FNT_NAME	gui.h	51;"	d
CH_FNT_WIDTH	font.c	19;"	d	file:
CH_HEIGHT	gui.h	27;"	d
CH_WIDTH	gui.h	26;"	d
CLIENT_INFO_H	cfginfo.h	2;"	d
COLOR_BLACK_SOLID	gui.h	37;"	d
COLOR_CLEAR	gui.h	31;"	d
COLOR_FONT	gui.h	33;"	d
COLOR_HILIGHT	gui.h	35;"	d
COLOR_WHITE_SOLID	gui.h	41;"	d
COLOR_WHITE_TRANSPARENT	gui.h	40;"	d
CONFIG_FILE	cfginfo.c	17;"	d	file:
CompareString	config.c	/^int CompareString(char *pInStr1,char *pInStr2)  $/;"	f
DEPLIBS	Makefile	/^DEPLIBS := jpeg slmmutil slksysctl liveMedia  groupsock UsageEnvironment  BasicUsageEnvironment slrtsp slos pthread dl m$/;"	m
DEPSRCS	Makefile	/^DEPSRCS := ..\/..\/..\/example\/common\/sl_msg.c ..\/..\/..\/example\/common\/handle.c$/;"	m
DEV_IO_NAME	main.c	115;"	d	file:
EN_FNT_HEIGHT	font.c	18;"	d	file:
EN_FNT_NAME	gui.h	50;"	d
EN_FNT_WIDTH	font.c	17;"	d	file:
EN_HEIGHT	gui.h	25;"	d
EN_WIDTH	gui.h	24;"	d
FAILURE	config.h	9;"	d
FILENAME_NOTEXIST	config.h	11;"	d
GetCfgInfo	cfginfo.c	/^CFG_INFO_S *GetCfgInfo()$/;"	f
GetConfigStringValue	config.c	/^int GetConfigStringValue(int fpConfig,char *pInSectionName,char *pInKeyName,char *pOutKeyValue)  $/;"	f
GetKeyValue	config.c	/^int GetKeyValue(int fpConfig,char *pInKeyName,char *pOutKeyValue)  $/;"	f
ICON_HEIGHT	gui.h	29;"	d
ICON_ID	display.h	/^}ICON_ID;$/;"	v	typeref:enum:__anon2
ICON_INFO	display.h	/^}ICON_INFO;$/;"	t	typeref:struct:__anon3
ICON_MAX	display.h	/^    ICON_MAX$/;"	e	enum:__anon2
ICON_SERVER_MISSING	display.h	/^    ICON_SERVER_MISSING = ICON_START,$/;"	e	enum:__anon2
ICON_START	display.h	/^    ICON_START = 0,$/;"	e	enum:__anon2
ICON_WIDTH	gui.h	28;"	d
IMAGE_SERVER_MISSING	display.h	8;"	d
IP	cfginfo.c	20;"	d	file:
InitCfgInfo	cfginfo.c	/^int InitCfgInfo(int *fp)$/;"	f
KEYNAME_NOTEXIST	config.h	13;"	d
LIST_BUFFER_S	list_handler.h	/^}LIST_BUFFER_S ;$/;"	t	typeref:struct:_list_buffer
MAX_RTSP_TIMEOUT	main.c	45;"	d	file:
MAX_RTSP_TIMEOUT	main.c	47;"	d	file:
MAX_STRING_LEN	gui.h	22;"	d
MDEV_Input_ThreadFunc	main.c	/^static SL_POINTER MDEV_Input_ThreadFunc(SL_POINTER Args)$/;"	f	file:
MODE_OSD	display.c	9;"	d	file:
MODE_PG	display.c	8;"	d	file:
NETWORK_INFO	cfginfo.c	19;"	d	file:
NODE_DATA_S	list_handler.h	/^}NODE_DATA_S;$/;"	t	typeref:struct:_node_data
NULL_C	gui.h	44;"	d
NULL_E	gui.h	43;"	d
NUM_RETRY	main.c	40;"	d	file:
OSD_HEIGHT	gui.h	20;"	d
OSD_WIDTH	gui.h	19;"	d
SECTIONNAME_NOTEXIST	config.h	12;"	d
SERVERIP	cfginfo.c	21;"	d	file:
SILANWORDR	main.c	/^}SILANWORDR;$/;"	t	typeref:struct:__anon4	file:
SLLIB_ROOT	Makefile	/^SLLIB_ROOT:=..\/..\/..$/;"	m
SLVDEC_setCfg	main.c	/^static SL_S32 SLVDEC_setCfg(SLVDEC_Cfg_s *cfg)$/;"	f	file:
STRING_EQUAL	config.h	16;"	d
STRING_LENNOTEQUAL	config.h	14;"	d
STRING_NOTEQUAL	config.h	15;"	d
SUCCESS	config.h	8;"	d
TIMEOUT	main.c	42;"	d	file:
TIME_CHECK_SECONDS	main.c	50;"	d	file:
USLEEP_TIME	main.c	41;"	d	file:
VIDEO_SUPPORT	main.c	53;"	d	file:
WATCHDOG_IOCTL_BASE	sl_watchdog.h	15;"	d
WATCHDOG_NOWAYOUT	sl_watchdog.h	57;"	d
WATCHDOG_NOWAYOUT	sl_watchdog.h	59;"	d
WDIOC_GETBOOTSTATUS	sl_watchdog.h	25;"	d
WDIOC_GETPRETIMEOUT	sl_watchdog.h	32;"	d
WDIOC_GETSTATUS	sl_watchdog.h	24;"	d
WDIOC_GETSUPPORT	sl_watchdog.h	23;"	d
WDIOC_GETTEMP	sl_watchdog.h	26;"	d
WDIOC_GETTIMELEFT	sl_watchdog.h	33;"	d
WDIOC_GETTIMEOUT	sl_watchdog.h	30;"	d
WDIOC_KEEPALIVE	sl_watchdog.h	28;"	d
WDIOC_SETOPTIONS	sl_watchdog.h	27;"	d
WDIOC_SETPRETIMEOUT	sl_watchdog.h	31;"	d
WDIOC_SETTIMEOUT	sl_watchdog.h	29;"	d
WDIOF_CARDRESET	sl_watchdog.h	43;"	d
WDIOF_EXTERN1	sl_watchdog.h	40;"	d
WDIOF_EXTERN2	sl_watchdog.h	41;"	d
WDIOF_FANFAULT	sl_watchdog.h	39;"	d
WDIOF_KEEPALIVEPING	sl_watchdog.h	48;"	d
WDIOF_MAGICCLOSE	sl_watchdog.h	46;"	d
WDIOF_OVERHEAT	sl_watchdog.h	38;"	d
WDIOF_POWEROVER	sl_watchdog.h	44;"	d
WDIOF_POWERUNDER	sl_watchdog.h	42;"	d
WDIOF_PRETIMEOUT	sl_watchdog.h	47;"	d
WDIOF_SETTIMEOUT	sl_watchdog.h	45;"	d
WDIOF_UNKNOWN	sl_watchdog.h	35;"	d
WDIOS_DISABLECARD	sl_watchdog.h	50;"	d
WDIOS_ENABLECARD	sl_watchdog.h	51;"	d
WDIOS_TEMPPANIC	sl_watchdog.h	52;"	d
WDIOS_UNKNOWN	sl_watchdog.h	36;"	d
_CONFIG_H	config.h	2;"	d
_DISPLAY_H	display.h	2;"	d
_FONT_H	font.h	2;"	d
_GUI_H	gui.h	2;"	d
_LINUX_WATCHDOG_H	sl_watchdog.h	10;"	d
_LIST_HANDLER_H	list_handler.h	2;"	d
_OSD_H	osd.h	2;"	d
_UTF8_H	utf8.h	2;"	d
_WIFI_STA_H	wifi_sta.h	2;"	d
_list_buffer	list_handler.h	/^typedef  struct _list_buffer {$/;"	s
_node_data	list_handler.h	/^typedef struct _node_data {$/;"	s
addr	main.c	/^	unsigned int addr;$/;"	m	struct:__anon4	file:
buf	gui.h	/^    unsigned char *buf;$/;"	m	struct:__anon1
cfginfo	cfginfo.c	/^CFG_INFO_S cfginfo;$/;"	v
cfginfo	cfginfo.h	/^typedef struct cfginfo$/;"	s
ch_font	font.c	/^static unsigned char *ch_font = NULL;$/;"	v	file:
color	gui.h	/^    SL_U32 color;$/;"	m	struct:__anon1
cvp	main.c	/^static chanVideoPara_s cvp;$/;"	v	file:
data	list_handler.h	/^    void*  data;$/;"	m	struct:_node_data
data	main.c	/^	unsigned int data;$/;"	m	struct:__anon4	file:
dhcpc_fp	wifi_sta.c	/^static FILE *dhcpc_fp = NULL;$/;"	v	file:
drawArgb8888	osd.c	/^static SL_S32 drawArgb8888(SL_POINTER dst, SL_U32 srcWidth, SL_U32 srcHeight, rectParam_t *rectParam)$/;"	f	file:
drawIndex1BPP	osd.c	/^SL_S32 drawIndex1BPP(SL_POINTER dst, SL_U32 srcWidth, SL_U32 srcHeight, rectParam_t *rectParam)$/;"	f
en_font	font.c	/^static unsigned char *en_font = NULL;$/;"	v	file:
fd_config	main.c	/^int fd_config;$/;"	v
fetch	list_handler.h	/^	NODE_DATA_S *fetch;	$/;"	m	struct:_list_buffer
fill_area	display.c	/^static void fill_area(int x, int y, int width, int height, int color, unsigned char *data, int mode)$/;"	f	file:
firmware_version	sl_watchdog.h	/^	__u32 firmware_version;	\/* Firmware version of the card *\/$/;"	m	struct:watchdog_info
flag	cfginfo.h	/^    char flag;$/;"	m	struct:cfginfo
font_init	font.c	/^int font_init()$/;"	f
font_read_chinese_char	font.c	/^unsigned char *font_read_chinese_char(unsigned char mb, unsigned char lb)$/;"	f
font_read_english_char	font.c	/^unsigned char *font_read_english_char(unsigned char mb)$/;"	f
font_read_fnt	font.c	/^static unsigned char *font_read_fnt(const char *name)$/;"	f	file:
g_audio_bits	main.c	/^static SL_U32 g_audio_bits;$/;"	v	file:
g_chns	main.c	/^static SL_U32 g_chns;$/;"	v	file:
g_cnt	main.c	/^static SL_S32 g_cnt;$/;"	v	file:
g_discard_frame	main.c	/^static SL_S32 g_discard_frame; \/\/for eric $/;"	v	file:
g_frameRate	main.c	/^static SL_U32 g_frameRate;$/;"	v	file:
g_fs	main.c	/^static SL_U32 g_fs;$/;"	v	file:
g_height	main.c	/^static SL_U32 g_height;$/;"	v	file:
g_interlace	main.c	/^static SL_U8 g_interlace;$/;"	v	file:
g_osd_need_reconfig	main.c	/^static SL_U32 g_osd_need_reconfig;$/;"	v	file:
g_osd_overlay	main.c	/^static SL_U32 g_osd_overlay;$/;"	v	file:
g_refreshRate	main.c	/^static SL_U8 g_refreshRate;$/;"	v	file:
g_server_connect	main.c	/^static SL_S32 g_server_connect; \/\/for eric$/;"	v	file:
g_sysctl_configed	main.c	/^static SL_S32 g_sysctl_configed;$/;"	v	file:
g_width	main.c	/^static SL_U32 g_width;$/;"	v	file:
height	display.h	/^    int height;$/;"	m	struct:__anon3
height	gui.h	/^    SL_U32 height;$/;"	m	struct:__anon1
id	display.h	/^    int id;$/;"	m	struct:__anon3
identity	sl_watchdog.h	/^	__u8  identity[32];	\/* Identity of the board *\/$/;"	m	struct:watchdog_info
im_devman	main.c	/^static SL_U32 im_devman;$/;"	v	file:
im_devman_osd	main.c	/^static SL_U32 im_devman_osd;$/;"	v	file:
initMemCtrl	main.c	/^static void initMemCtrl(memCtrl_s *mc, SL_U32 size)$/;"	f	file:
initMemCtrl_osd	main.c	/^static void initMemCtrl_osd(memCtrl_s *mc, SL_U32 size)$/;"	f	file:
ip	cfginfo.h	/^    char ip[32];$/;"	m	struct:cfginfo
list	main.c	/^static LIST_BUFFER_S *list;$/;"	v	file:
list_fetch_data	list_handler.c	/^int list_fetch_data(LIST_BUFFER_S *list, void **phy_addr)$/;"	f
list_flush_data	list_handler.c	/^void *list_flush_data(LIST_BUFFER_S *list)$/;"	f
list_init	list_handler.c	/^LIST_BUFFER_S * list_init(void)$/;"	f
list_push_data	list_handler.c	/^int list_push_data(LIST_BUFFER_S *list, void* phy_buf)$/;"	f
list_release_data	list_handler.c	/^int list_release_data(LIST_BUFFER_S *list)$/;"	f
list_uninit	list_handler.c	/^void list_uninit(LIST_BUFFER_S *list)$/;"	f
main	main.c	/^int main(int argc, char* argv[])$/;"	f
mutexlock	list_handler.h	/^	void *mutexlock;$/;"	m	struct:_list_buffer
name	display.h	/^    char *name;$/;"	m	struct:__anon3
need_feed_dog	main.c	/^static SL_U32 need_feed_dog = 1;$/;"	v	file:
netInterface	main.c	/^static SL_U32 netInterface; $/;"	v	file:
options	sl_watchdog.h	/^	__u32 options;		\/* Options the card\/driver supports *\/$/;"	m	struct:watchdog_info
osd_cfg	main.c	/^static SLVPP_OSD_Cfg_s osd_cfg;$/;"	v	file:
osd_dev	main.c	/^static SL_U32 osd_dev;$/;"	v	file:
osd_display_init	display.c	/^int osd_display_init()$/;"	f
osd_draw	osd.c	/^SL_S32 osd_draw(rectParam_t *rectParam)$/;"	f
osd_fill_area	display.c	/^void osd_fill_area(int x, int y, int width, int height, int color)$/;"	f
osd_sysctl_config	main.c	/^static SL_S32 osd_sysctl_config(void)$/;"	f	file:
pnext	list_handler.h	/^    struct _node_data *pnext;$/;"	m	struct:_node_data	typeref:struct:_node_data::_node_data
port	cfginfo.h	/^    int port;$/;"	m	struct:cfginfo
process_osd_disable	main.c	/^static int process_osd_disable(void)$/;"	f	file:
process_osd_text_overlay	main.c	/^static int process_osd_text_overlay(int x, int y, const char *text)$/;"	f	file:
process_osd_text_solid	main.c	/^static int process_osd_text_solid(int x, int y, const char *text)$/;"	f	file:
push	list_handler.h	/^	NODE_DATA_S *push;$/;"	m	struct:_list_buffer
pv_cfg	main.c	/^static SLVPP_PV_Cfg_s pv_cfg;$/;"	v	file:
pv_dev	main.c	/^static SL_U32 pv_dev;$/;"	v	file:
reboot1	main.c	/^int reboot1(void)$/;"	f
rectParam_t	gui.h	/^}rectParam_t;$/;"	t	typeref:struct:__anon1
rtspOpen_audio	main.c	/^static SL_POINTER rtspOpen_audio(SL_POINTER Args)$/;"	f	file:
rtspOpen_video	main.c	/^static SL_POINTER rtspOpen_video(SL_POINTER Args)$/;"	f	file:
rtspURL_audio_eth0	main.c	/^char rtspURL_audio_eth0[128] = "rtsp:\/\/192.168.1.3:8559\/testStream"; \/\/audio $/;"	v
rtspURL_audio_wlan0	main.c	/^char rtspURL_audio_wlan0[128] = "rtsp:\/\/10.10.1.1:8559\/testStream"; \/\/audio $/;"	v
rtspURL_video_eth0	main.c	/^char rtspURL_video_eth0[128] = "rtsp:\/\/192.168.1.3:8554\/ch0"; \/\/video $/;"	v
rtspURL_video_wlan0	main.c	/^char rtspURL_video_wlan0[128] = "rtsp:\/\/10.10.1.1:8554\/ch0"; \/\/video $/;"	v
server_connect	main.c	/^const char * server_connect ="connect to TX";$/;"	v
server_not_connect	main.c	/^const char * server_not_connect ="Not connect to TX";$/;"	v
server_not_running	main.c	/^const char * server_not_running ="TX Not Running";$/;"	v
server_running	main.c	/^const char * server_running ="Check TX's input signal";$/;"	v
serverip	cfginfo.h	/^    char serverip[32];$/;"	m	struct:cfginfo
setOsdCfg	main.c	/^static void  setOsdCfg(SLVPP_OSD_Cfg_s *cfg)$/;"	f	file:
setPvCfg	main.c	/^static void  setPvCfg(SLVPP_PV_Cfg_s *cfg)$/;"	f	file:
set_osd_buf	osd.c	/^SL_S32 set_osd_buf(void * buf)$/;"	f
show_buf	osd.c	/^static void * show_buf;$/;"	v	file:
show_osd	display.c	/^static void show_osd(int x, int y, int width, int height, unsigned char *data)$/;"	f	file:
show_text	main.c	/^const char * show_text ="welcome to silan";$/;"	v
signalHandle	main.c	/^void signalHandle(int signo)$/;"	f
signalioHandle	main.c	/^void signalioHandle(int signo) $/;"	f
startX	gui.h	/^    SL_U32 startX;$/;"	m	struct:__anon1
startY	gui.h	/^    SL_U32 startY;$/;"	m	struct:__anon1
sysctl_config	main.c	/^static SL_S32 sysctl_config(void)$/;"	f	file:
text_show	display.c	/^void text_show(int x, int y, const char *text, int color_fg, int color_bk, int max_len)$/;"	f
text_show_char	display.c	/^static void text_show_char(int x, int y, int width, int height, unsigned char *data, int color_fg, int color_bk)$/;"	f	file:
text_show_gb2312	display.c	/^void text_show_gb2312(int x, int y, char *text, int color_fg, int color_bk, int max_len)$/;"	f
timeoutCnt	main.c	/^volatile static int timeoutCnt = 0;$/;"	v	file:
trigger	main.c	/^static SL_S32 trigger(SL_S32 first_time)$/;"	f	file:
unicode_gb2312_map	utf8.c	/^static unsigned short unicode_gb2312_map[] =$/;"	v	file:
unicode_to_gb2312	utf8.c	/^static int unicode_to_gb2312(unsigned char *src, int src_len, unsigned char *dst, int dst_maxlen)$/;"	f	file:
update_cfg_info	cfginfo.c	/^int update_cfg_info(int fpConfig, CFG_INFO_S *pcfginfo)$/;"	f
utf8_to_gb2312	utf8.c	/^int utf8_to_gb2312(unsigned char *src, int src_len, unsigned char *dst, int dst_maxlen)$/;"	f
utf8_to_unicode	utf8.c	/^static int utf8_to_unicode(unsigned char *src, int src_len, unsigned char *dst, int dst_maxlen)$/;"	f	file:
vdecCfg	main.c	/^static SLVDEC_Cfg_s vdecCfg;$/;"	v	file:
vpu_dev	main.c	/^static SL_U32 vpu_dev;$/;"	v	file:
wacPushFrameToMDev	main.c	/^static int wacPushFrameToMDev(unsigned char *pframe, int  size)$/;"	f	file:
watchdog_handle	main.c	/^static SL_POINTER  watchdog_handle(SL_POINTER Args)$/;"	f	file:
watchdog_info	sl_watchdog.h	/^struct watchdog_info {$/;"	s
width	display.h	/^    int width;$/;"	m	struct:__anon3
width	gui.h	/^    SL_U32 width;$/;"	m	struct:__anon1
wifi_handle	main.c	/^static SL_POINTER  wifi_handle(SL_POINTER Args)$/;"	f	file:
wifi_sta_get_ip_addr	wifi_sta.c	/^int wifi_sta_get_ip_addr(char ip_addr[20])$/;"	f
wifi_sta_start	main.c	/^static int  wifi_sta_start(void)$/;"	f	file:
wifi_sta_start_udhcpc	wifi_sta.c	/^int wifi_sta_start_udhcpc(void)$/;"	f
wifi_sta_start_wpa	wifi_sta.c	/^int wifi_sta_start_wpa(void)$/;"	f
wifi_sta_stop_udhcpc	wifi_sta.c	/^int wifi_sta_stop_udhcpc(void)$/;"	f
wifi_sta_stop_wpa	wifi_sta.c	/^int wifi_sta_stop_wpa(void)$/;"	f
wpa_fp	wifi_sta.c	/^static FILE *wpa_fp = NULL;$/;"	v	file:
